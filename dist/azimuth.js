(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a=a||self,a.azimuth=b())})(this,function(){function s(a){return a*(h/180)}function C(a){return a*(180/h)}function k(i,f,a,b){if(i===a&&f===b)return 0;const c=s(i),d=s(a);let e=s(b-f);const k=D(g(h/4+d/2)/g(h/4+c/2));B(e)>h&&(0<e?e=-(2*h-e):e=2*h+e);const l=A(e,k),m=(C(l)+360)%360;return m}function l(d,e,a,b){if(d===a&&e===b)return 0;const c=s(d),f=s(a),g=s(b-e),h=z(g)*r(f),i=r(c)*z(f)-z(c)*r(f)*r(g),j=A(h,i),k=(C(j)+360)%360;return k}function m(e,c){if(isNaN(e)||isNaN(c))throw new Error("Parameter is not a number!");if(0>e||360<e)throw new Error("Parameter outside of range!");if(1>c||3<c)throw new Error("Parameter outside of range!");const a=["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW"];let b=4;2==c&&(b=8),3==c&&(b=16);const h=360/b,i=a.length/b;let f=y(e/h)*i;return f>=a.length&&(f=0),a[f]}function n(a,b,c,d){if(a===c&&b===d)return 0;const e=s(a),f=s(c),g=s(a-c),h=s(b-d),i=z(g/2)*z(g/2)+r(e)*r(f)*z(h/2)*z(h/2),j=2*A(x(i),x(1-i));return E*j}function o(b,d,a,c){if(b===a&&d===c)return 0;const e=s(b),f=s(a),i=s(b-a);let j=s(d-c);const k=D(g(h/4+f/2)/g(h/4+e/2)),m=1e-11<B(k)?i/k:r(e);B(j)>h&&(0<j?j=-(2*h-j):j=2*h+j);const n=x(i*i+m*m*j*j)*E;return n}function p(b,c="m"){if("m"===c)return b;switch(c){case"km":return .001*b;break;case"ft":return 3.28084*b;break;case"yd":return 1.0936*b;break;case"mi":return 621371e-9*b;break;case"nm":return 539957e-9*b;break;default:return b}}var c=Number.prototype,a=Math.PI,e=Math.tan,f=Math.log,j=Math.abs,q=Math.atan2,t=Math.sin,u=Math.cos,v=Math.round,w=Math.sqrt,x=w,y=v,r=u,z=t,A=q,B=j,D=f,g=e,h=a;const E=6371009;return c.round=function(b=0){const c=new Number(this.valueOf());return+(y(c+"e+"+b)+"e-"+b)},function(q,g,{units:a="m",distancePrecision:b=0,formula:c="great-circle",azimuthPrecision:d=0,directionPrecision:e=2}={}){if("undefined"==typeof q||"undefined"==typeof g)throw new Error("At least one point is missing!");if([q,g].forEach(a=>{if(!a.hasOwnProperty("lat")||!a.hasOwnProperty("lng"))throw new Error("Latitude/Longitude property missing!");if(isNaN(a.lat)||isNaN(a.lng))throw new Error("Latitude/Longitude property must be a number!");if(180<B(a.lat)||90<B(a.lng))throw new Error("Latitude/Longitude property exceeding maximal value!")}),!["m","km","ft","yd","mi","nm"].includes(a))throw new Error("Units parameter type not supported!");if(isNaN(b)||isNaN(d)||15<b||15<d)throw new Error("Precision parameter is not a number or exceeds it's maximum value of 15!");if(!["great-circle","rhumb-line"].includes(c))throw new Error("Calculation formula type parameter not supported!");if(![0,1,2,3,"0","1","2","3"].includes(e))throw new Error("Compass precision parameter not supported!");let f={};const h=p("rhumb-line"===c?o(q.lat,q.lng,g.lat,g.lng):n(q.lat,q.lng,g.lat,g.lng),a).round(b);f.distance=h,f.units=a;const i=0===h?"":("rhumb-line"===c?k(q.lat,q.lng,g.lat,g.lng):l(q.lat,q.lng,g.lat,g.lng)).round(d);return f.azimuth=i,f.formula=c,0!=e&&(f.direction=0===h?"":m(i,e)),f}});
(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a=a||self,a.azimuth=b())})(this,function(){var b=Math.sqrt,c=Math.round,d=Math.cos,e=Math.sin,f=Math.atan2,g=Math.abs,h=Math.log,i=Math.tan,j=Math.PI;function k(a){return a*(j/180)}function l(a){return a*(180/j)}function m(a,b,c,d){if(a===c&&b===d)return 0;const e=k(a),m=k(c);let n=k(d-b);const o=h(i(j/4+m/2)/i(j/4+e/2));g(n)>j&&(0<n?n=-(2*j-n):n=2*j+n);const p=f(n,o),q=(l(p)+360)%360;return q}function n(a,b,c,g){if(a===c&&b===g)return 0;const h=k(a),i=k(c),j=k(g-b),m=e(j)*d(i),n=d(h)*e(i)-e(h)*d(i)*d(j),o=f(m,n),p=(l(o)+360)%360;return p}function o(a,b){if(isNaN(a)||isNaN(b))throw new Error("Parameter is not a number!");if(0>a||360<a)throw new Error("Parameter outside of range!");if(1>b||3<b)throw new Error("Parameter outside of range!");const d=["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW"];let e=4;2==b&&(e=8),3==b&&(e=16);const f=360/e,g=d.length/e;let h=c(a/f)*g;return h>=d.length&&(h=0),d[h]}function p(g,h,i,j){if(g===i&&h===j)return 0;const l=k(g),m=k(i),n=k(g-i),o=k(h-j),p=e(n/2)*e(n/2)+d(l)*d(m)*e(o/2)*e(o/2),a=2*f(b(p),b(1-p));return s*a}function q(a,c,e,f){if(a===e&&c===f)return 0;const l=k(a),m=k(e),n=k(a-e);let o=k(c-f);const p=h(i(j/4+m/2)/i(j/4+l/2)),r=1e-11<g(p)?n/p:d(l);g(o)>j&&(0<o?o=-(2*j-o):o=2*j+o);const q=b(n*n+r*r*o*o)*s;return q}function r(a,b="m"){if("m"===b)return a;switch(b){case"km":return .001*a;break;case"ft":return 3.28084*a;break;case"yd":return 1.0936*a;break;case"mi":return 621371e-9*a;break;case"nm":return 539957e-9*a;break;default:return a}}const s=6371009;Number.prototype.round=function(a=0){const b=new Number(this.valueOf());return+(c(b+"e+"+a)+"e-"+a)};return function(a,b,{units:c="m",distancePrecision:d=0,formula:e="great-circle",azimuthPrecision:f=0,directionPrecision:h=2}={}){if("undefined"==typeof a||"undefined"==typeof b)throw new Error("At least one point is missing!");if([a,b].forEach(a=>{if(!a.hasOwnProperty("lat")||!a.hasOwnProperty("lng"))throw new Error("Latitude/Longitude property missing!");if(isNaN(a.lat)||isNaN(a.lng))throw new Error("Latitude/Longitude property must be a number!");if(180<g(a.lat)||90<g(a.lng))throw new Error("Latitude/Longitude property exceeding maximal value!")}),!["m","km","ft","yd","mi","nm"].includes(c))throw new Error("Units parameter type not supported!");if(isNaN(d)||isNaN(f)||15<d||15<f)throw new Error("Precision parameter is not a number or exceeds it's maximum value of 15!");if(!["great-circle","rhumb-line"].includes(e))throw new Error("Calculation formula type parameter not supported!");if(![0,1,2,3,"0","1","2","3"].includes(h))throw new Error("Compass precision parameter not supported!");let i={};const j=r("rhumb-line"===e?q(a.lat,a.lng,b.lat,b.lng):p(a.lat,a.lng,b.lat,b.lng),c).round(d);i.distance=j,i.units=c;const k=0===j?"":("rhumb-line"===e?m(a.lat,a.lng,b.lat,b.lng):n(a.lat,a.lng,b.lat,b.lng)).round(f);return i.azimuth=k,i.formula=e,0!=h&&(i.direction=0===j?"":o(k,h)),i}});